// <auto-generated />
using System;
using EcoWatt.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace EcoWatt.Database.Migrations
{
    [DbContext(typeof(FIAPDBContext))]
    [Migration("20241114234813_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcoWatt.Model.Bateria", b =>
                {
                    b.Property<int>("IdBateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_bateria");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBateria"));

                    b.Property<string>("DsNomeConjunto")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ds_nome_conjunto");

                    b.Property<string>("DsStatus")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ds_status");

                    b.Property<string>("DsTipoBateria")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ds_tipo_bateria");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_modificacao");

                    b.Property<DateTime?>("DtUltimaLeitura")
                        .HasColumnType("date")
                        .HasColumnName("dt_timestamp_ultima_leitura");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("number(11)")
                        .HasColumnName("id_usuario");

                    b.Property<long>("VlCapacidade")
                        .HasColumnType("number(11)")
                        .HasColumnName("vl_capacidade");

                    b.Property<long>("VlQuantidade")
                        .HasColumnType("number(11)")
                        .HasColumnName("vl_quantidade");

                    b.HasKey("IdBateria");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ecowatt_baterias");
                });

            modelBuilder.Entity("EcoWatt.Model.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_usuario");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("DsNomeCompleto")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("ds_nome_completo");

                    b.Property<string>("DsSenha")
                        .IsRequired()
                        .HasColumnType("varchar(225)")
                        .HasColumnName("ds_senha");

                    b.Property<string>("DsUsuario")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("ds_usuario");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_criacao");

                    b.Property<DateTime?>("DtModificacao")
                        .HasColumnType("date")
                        .HasColumnName("dt_modificacao");

                    b.HasKey("IdUsuario");

                    b.ToTable("ecowatt_usuario");
                });

            modelBuilder.Entity("EcoWatt.Model.UsuarioUse", b =>
                {
                    b.Property<int>("IdUse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_use");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUse"));

                    b.Property<long>("IdBateria")
                        .HasColumnType("number(11)")
                        .HasColumnName("id_bateria");

                    b.Property<long>("IdUsuario")
                        .HasColumnType("number(11)")
                        .HasColumnName("id_usuario");

                    b.Property<DateTime>("UsedAt")
                        .HasColumnType("date")
                        .HasColumnName("used_at");

                    b.HasKey("IdUse");

                    b.HasIndex("IdBateria");

                    b.HasIndex("IdUsuario");

                    b.ToTable("ecowatt_usuario_use");
                });

            modelBuilder.Entity("EcoWatt.Model.Bateria", b =>
                {
                    b.HasOne("EcoWatt.Model.Usuario", "Usuario")
                        .WithMany("Baterias")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoWatt.Model.UsuarioUse", b =>
                {
                    b.HasOne("EcoWatt.Model.Bateria", "Bateria")
                        .WithMany()
                        .HasForeignKey("IdBateria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EcoWatt.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bateria");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EcoWatt.Model.Usuario", b =>
                {
                    b.Navigation("Baterias");
                });
#pragma warning restore 612, 618
        }
    }
}
